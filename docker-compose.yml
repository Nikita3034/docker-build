version: "3.8"

services:
    nginx:
        restart: unless-stopped
        container_name: ${PROJECT_NAME}_nginx
        build: ./nginx
        ports: 
            - "80:80"
        volumes:
            - ./nginx/conf:/etc/nginx/conf.d
            - ${PROJECTS_PATH}:/var/www
        networks:
            - default

    php-fpm:
        restart: unless-stopped
        container_name: ${PROJECT_NAME}_php-fpm
        build: ./php-fpm
        ports: 
            - "9000:9000"
        volumes:
            - ${PROJECTS_PATH}:/var/www
            - ./php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:cached
        networks:
            - default

    mysql:
        restart: unless-stopped
        container_name: ${PROJECT_NAME}_mysql
        platform: linux/x86_64
        build: ./mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        volumes:
            - ./database/mysql:/var/lib/mysql
            - ./database/dump:/dump
        networks:
            - default

    # postgres:
    #     restart: unless-stopped
    #     build:
    #         context: ./postgres
    #         dockerfile: Dockerfile
    #     container_name: ${PROJECT_NAME}_postgres
    #     volumes:
    #         - ./database/data:/var/lib/postgresql/data:cached
    #         - ./database/dump:/dump:cached
    #     environment:
    #         POSTGRES_USER: ${POSTGRES_USER}
    #         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #         POSTGRES_DB: ${POSTGRES_DB}
    #         POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
    #     ports:
    #         - "5432:5432"
    #     networks:
    #         - default

    # node: 
    #     restart: unless-stopped
    #     container_name: ${PROJECT_NAME}_node
    #     build:
    #         context: ./node
    #         dockerfile: Dockerfile
    #     ports:
    #         - "3000:3000"
    #     volumes:
    #         - ${PROJECTS_PATH_NODE}:/var/www:cached
    #     command: sh -c "npm install && npm run start"
    #     networks:
    #         - default

networks:
    default:
        name: network_default